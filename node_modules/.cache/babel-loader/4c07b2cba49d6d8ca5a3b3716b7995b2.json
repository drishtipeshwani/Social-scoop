{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Drishti\\\\Desktop\\\\Social Scoop\\\\socialscoop\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\Drishti\\\\Desktop\\\\Social Scoop\\\\socialscoop\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Drishti\\\\Desktop\\\\Social Scoop\\\\socialscoop\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Drishti\\\\Desktop\\\\Social Scoop\\\\socialscoop\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Drishti\\\\Desktop\\\\Social Scoop\\\\socialscoop\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Drishti\\\\Desktop\\\\Social Scoop\\\\socialscoop\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"C:\\\\Users\\\\Drishti\\\\Desktop\\\\Social Scoop\\\\socialscoop\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Drishti\\\\Desktop\\\\Social Scoop\\\\socialscoop\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Drishti\\\\Desktop\\\\Social Scoop\\\\socialscoop\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Identicon from 'identicon.js';\nimport './App.css';\nimport SocialScoop from '../abis/Socialscoop.json';\nimport Navbar from './Navbar';\nimport Main from './Main'; //Declare IPFS\n\nvar ipfsClient = require('ipfs-http-client');\n\nvar ipfs = ipfsClient({\n  host: 'ipfs.infura.io',\n  port: 5001,\n  protocol: 'https'\n}); // leaving out the arguments will default to these values\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"tipImageOwner\",\n    value: function tipImageOwner(id, tipamount) {\n      var _this2 = this;\n\n      this.setState({\n        loading: true\n      });\n      this.state.socialscoop.methods.tipImageOwner(id).send({\n        from: this.state.account,\n        value: tipamount\n      }).on('transactionHash', function (hash) {\n        _this2.setState({\n          loading: false\n        });\n      });\n    }\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.componentWillMount = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return _this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.loadWeb3 = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.loadBlockchainData = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(event) {\n        var web3, accounts, networkId, networkData, socialscoop, imagesCount, i, image;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3; // Load account\n\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n\n                _this.setState({\n                  account: accounts[0]\n                }); // Network ID\n\n\n                _context3.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkId = _context3.sent;\n                networkData = SocialScoop.networks[networkId];\n\n                if (!networkData) {\n                  _context3.next = 29;\n                  break;\n                }\n\n                socialscoop = new web3.eth.Contract(SocialScoop.abi, networkData.address);\n\n                _this.setState({\n                  socialscoop: socialscoop\n                });\n\n                _context3.next = 14;\n                return socialscoop.methods.imageCount().call();\n\n              case 14:\n                imagesCount = _context3.sent;\n\n                _this.setState({\n                  imagesCount: imagesCount\n                }); // Load images\n\n\n                i = 1;\n\n              case 17:\n                if (!(i <= imagesCount)) {\n                  _context3.next = 25;\n                  break;\n                }\n\n                _context3.next = 20;\n                return socialscoop.methods.images(i).call();\n\n              case 20:\n                image = _context3.sent;\n\n                _this.setState({\n                  images: [].concat(_toConsumableArray(_this.state.images), [image])\n                });\n\n              case 22:\n                i++;\n                _context3.next = 17;\n                break;\n\n              case 25:\n                // Sort images. Show highest tipped images first\n                _this.setState({\n                  images: _this.state.images.sort(function (a, b) {\n                    return b.tipamount - a.tipamount;\n                  })\n                });\n\n                _this.setState({\n                  loading: false\n                });\n\n                _context3.next = 30;\n                break;\n\n              case 29:\n                window.alert('SocialScoop contract not deployed to detected network.');\n\n              case 30:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.captureFile = function (event) {\n      event.preventDefault();\n      var file = event.target.files[0];\n      var reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = function () {\n        _this.setState({\n          buffer: Buffer(reader.result)\n        });\n\n        console.log('buffer', _this.state.buffer);\n      };\n    };\n\n    _this.uploadImage = function (description) {\n      console.log(\"Submitting file to ipfs...\"); //adding file to the IPFS\n\n      ipfs.add(_this.state.buffer, function (error, result) {\n        console.log('Ipfs result', result);\n\n        if (error) {\n          console.error(error);\n          return;\n        }\n\n        _this.setState({\n          loading: true\n        });\n\n        _this.state.socialscoop.methods.uploadImage(result[0].hash, description).send({\n          from: _this.state.account\n        }).on('transactionHash', function (hash) {\n          _this.setState({\n            loading: false\n          });\n        });\n      });\n    };\n\n    _this.state = {\n      account: '',\n      socialscoop: null,\n      images: [],\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        account: this.state.account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }\n      }), this.state.loading ? /*#__PURE__*/React.createElement(\"div\", {\n        id: \"loader\",\n        className: \"text-center mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 59\n        }\n      }, \"Loading...\")) : /*#__PURE__*/React.createElement(Main, {\n        images: this.state.images,\n        captureFile: this.captureFile,\n        uploadImage: this.uploadImage,\n        tipImageOwner: this.tipImageOwner,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Drishti/Desktop/Social Scoop/socialscoop/src/components/App.js"],"names":["React","Component","Web3","Identicon","SocialScoop","Navbar","Main","ipfsClient","require","ipfs","host","port","protocol","App","id","tipamount","setState","loading","state","socialscoop","methods","tipImageOwner","send","from","account","value","on","hash","props","componentWillMount","event","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","net","getId","networkId","networkData","networks","Contract","abi","address","imageCount","call","imagesCount","i","images","image","sort","a","b","captureFile","preventDefault","file","target","files","reader","FileReader","readAsArrayBuffer","onloadend","buffer","Buffer","result","console","log","uploadImage","description","add","error"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Identicon from 'identicon.js';\nimport './App.css';\nimport SocialScoop from '../abis/Socialscoop.json'\nimport Navbar from './Navbar'\nimport Main from './Main'\n\n//Declare IPFS\nconst ipfsClient = require('ipfs-http-client')\nconst ipfs = ipfsClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' }) // leaving out the arguments will default to these values\n\nclass App extends Component {\n\n\n  componentWillMount = async event => {\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n  }\n\n  loadWeb3 = async event => {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n\n  loadBlockchainData = async event => {\n    const web3 = window.web3\n    // Load account\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n    // Network ID\n    const networkId = await web3.eth.net.getId()\n    const networkData = SocialScoop.networks[networkId]\n    if (networkData) {\n      const socialscoop = new web3.eth.Contract(SocialScoop.abi, networkData.address)\n      this.setState({ socialscoop })\n      const imagesCount = await socialscoop.methods.imageCount().call()\n      this.setState({ imagesCount })\n      // Load images\n      for (var i = 1; i <= imagesCount; i++) {\n        const image = await socialscoop.methods.images(i).call()\n        this.setState({\n          images: [...this.state.images, image]\n        })\n      }\n      // Sort images. Show highest tipped images first\n      this.setState({\n        images: this.state.images.sort((a, b) => b.tipamount - a.tipamount)\n      })\n      this.setState({ loading: false })\n    } else {\n      window.alert('SocialScoop contract not deployed to detected network.')\n    }\n  }\n\n  captureFile = event => {\n\n    event.preventDefault()\n    const file = event.target.files[0]\n    const reader = new window.FileReader()\n    reader.readAsArrayBuffer(file)\n\n    reader.onloadend = () => {\n      this.setState({ buffer: Buffer(reader.result) })\n      console.log('buffer', this.state.buffer)\n    }\n  }\n\n  uploadImage = description => {\n    console.log(\"Submitting file to ipfs...\")\n\n    //adding file to the IPFS\n    ipfs.add(this.state.buffer, (error, result) => {\n      console.log('Ipfs result', result)\n      if (error) {\n        console.error(error)\n        return\n      }\n\n      this.setState({ loading: true })\n      this.state.socialscoop.methods.uploadImage(result[0].hash, description).send({ from: this.state.account }).on('transactionHash', (hash) => {\n        this.setState({ loading: false })\n      })\n    })\n  }\n\n  tipImageOwner(id, tipamount) {\n    this.setState({ loading: true })\n    this.state.socialscoop.methods.tipImageOwner(id).send({ from: this.state.account, value: tipamount }).on('transactionHash', (hash) => {\n      this.setState({ loading: false })\n    })\n  }\n\n\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: '',\n      socialscoop: null,\n      images: [],\n      loading: true\n    }\n  }\n\n\n\n  render() {\n    return (\n      <div>\n        <Navbar account={this.state.account} />\n        {this.state.loading\n          ? <div id=\"loader\" className=\"text-center mt-5\"><p>Loading...</p></div>\n          : <Main\n            images={this.state.images}\n            captureFile={this.captureFile}\n            uploadImage={this.uploadImage}\n            tipImageOwner={this.tipImageOwner}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}